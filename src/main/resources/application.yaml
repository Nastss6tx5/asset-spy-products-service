server:
  port: 8081
  servlet:
    context-path: /products-service
spring:
  application:
    name: asset-spy-products-service
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/asset_spy_db}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:123}
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        default_schema: ${SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA:asset_spy_products_service_db}
        format_sql: true
  liquibase:
    enabled: true
    default-schema: asset_spy_products_service_db
  cache:
    type: redis
    redis:
      time-to-live: 10m
  data:
    redis:
      port: ${SPRING_DATA_REDIS_PORT:6379}
      host: ${SPRING_DATA_REDIS_HOST:redis}
jwt:
  secret-key: ${JWT_SECRET_KEY:38ddfeac16e316426825dd93e41cb1cb2b248002d4843251ec7bbefebf6bed9194a8fb5ef3a6bcb1189ad1c7b828ee27cb219=}
kafka:
  count-partitions: 3
  vendor-topic-prefix: ${KAFKA_VENDOR_TOPIC_PREFIX:topic_vendor_}
  bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka-broker:9092}
  listener-prefix: ${KAFKA_LISTENER_PREFIX:kafkaListenerId-}
  concurrency: ${KAFKA_CONCURRENCY:3}
  consumer-properties:
    "[bootstrap.servers]": ${KAFKA_CONSUMER_PROPERTIES_BOOTSTRAP_SERVERS:kafka-broker:9092}
    "[group.id]": ${KAFKA_CONSUMER_PROPERTIES_GROUP_ID:asset-spy-products-service}
    "[auto.offset.reset]": ${KAFKA_CONSUMER_PROPERTIES_AUTO_OFFSET_RESET:earliest}

springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /v3/api-docs